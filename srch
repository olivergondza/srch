#!/bin/bash

: ${SRCH_DIR="$(readlink -f ~/.srch)"}
: ${SRCH_CONFIG="$SRCH_DIR/config"}
: ${SRCH_ENGINES="$SRCH_DIR/engines"}

# http://stackoverflow.com/a/10660730/2091470
function _rawurlencode() {
    local string="${1}"
    local strlen=${#string}
    local encoded=""
    local pos=0

    for (( ; pos<strlen ; pos++ )); do
       c=${string:$pos:1}
       case "$c" in
          [-_.~a-zA-Z0-9] )
              o="${c}"
          ;;
          * )
              printf -v o '%%%02x' "'$c"
          ;;
       esac
       encoded+="${o}"
    done
    eval "$2='$encoded'"
}

function _print_engines() {
    echo "Available engines:"
    for e in $(ls $SRCH_ENGINES/); do
        . "$SRCH_ENGINES/$e"
        echo -e "\t $e\t$DESCRIPTION"
        unset DESCRIPTION
    done
}

if [ $# -lt 1 ]; then
    echo "No search engine specified" >&2
    _print_engines >&2
    exit 1
fi

engine=$1
shift

engine_config="$SRCH_ENGINES/$engine"
if [ ! -f "$engine_config" ]; then
    echo "No engine '$engine' configured"  >&2
    _print_engines >&2
    exit 1
fi

if [ -f "$SRCH_CONFIG" ]; then
    . "$SRCH_CONFIG"
fi

. $engine_config

# urlencode all args
if [ $# -eq 0 ]; then
  args=( "$(cat)" )
else
  args=( "$@" )
fi
for (( pos=0 ; pos<${#args[@]} ; pos++ )); do
    _rawurlencode "${args[pos]}" "arg"
    args[$pos]=$arg
done
set -- "${args[@]}" # Set encoded values to positional args

exec $BROWSER "$(eval "echo \"${URL}\"")"
